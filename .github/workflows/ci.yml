name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: self-hosted

    steps:
      - name: Clean workspace
        run: sudo rm -rf "${GITHUB_WORKSPACE}"/*

      - uses: actions/checkout@v4

      - name: Créer fichier .env 
        run: |
          echo "MYSQL_HOST=${{ vars.MYSQL_HOST }}" >> .env
          echo "MONGODB_HOST=${{ vars.MONGODB_HOST }}" >> .env
          echo "MYSQL_DB_NAME=${{ vars.MYSQL_DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ vars.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ vars.DB_PASSWORD }}" >> .env

      - name: Installer les dependences Python
        working-directory: .
        run: |
          python3 -m pip install -r requirements.txt --break-system-packages
          python3 -m pip install pytest --break-system-packages

      - name: Démarrer le conteneur
        run: docker compose up -d

      - name: Attendre MySQL et vérifier l'initialisation
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 15
          timeout=90
          until docker exec mysql mysqladmin ping --silent; do
            echo "Waiting for MySQL..."
            sleep 3
            timeout=$((timeout - 3))
            if [ $timeout -le 0 ]; then
              echo "MySQL failed to start"
              docker logs mysql
              exit 1
            fi
          done
          
          echo "Waiting for database initialization to complete..."
          sleep 10
          
          echo "Verifying database initialization..."
          docker exec mysql mysql -u user -ppass -D mydb -e "SHOW TABLES;" || {
            echo "Database not properly initialized, checking logs..."
            docker logs mysql
            exit 1
          }
          echo "Database initialized successfully!"

      - name: Exécuter test_user.py (TODO - inclure tous les tests)
        working-directory: src
        run: python3 -m pytest tests/test_user.py -v 

      - name: Déploiement
        working-directory: src
        run: echo "TODO - Faire le déploiement"

      - name: Cleanup
        if: always()
        run: docker compose down -v